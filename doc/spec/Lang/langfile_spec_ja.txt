
検討中の仕様

==========================================================================================
[概要]
==========================================================================================

言語情報ファイルは以下の3つのフェーズからなる。

1. 言語情報フェーズ

 Qt Brynhildrが言語情報として識別するための情報群

2. 物理キーボード定義フェーズ

 Qt::Key_* と VK_* の対応情報、SHIFTキーの要/不要/関係なし, プラットフォーム指定 の情報

3. ソフトウェア・キーボード定義フェーズ

 ソフトウェアのキーとキートップ文字列の対応情報(通常時、SHIFTキー押下時、Fnキー押下時)

==========================================================================================
[詳細]
==========================================================================================

------------------------------------------------------------------------------------------
0. 全体について
------------------------------------------------------------------------------------------

 (1) '#'以降は改行までコメントとみなす。

 (2) 空白、タブは無視する。

 (3) 各情報はフェーズ名([General]/[Keys]/[SoftKeys])で区切る。

 (4) 文字コードはUTF-8Nを想定

 (5) 不明なKey_名, VK_名はエラーとする。ただしVK_NONE_00は0とみなす。

------------------------------------------------------------------------------------------
1. 言語情報
------------------------------------------------------------------------------------------

1, 言語名

Name="Japanese"

2, 作成者名

Author="FunFun <fu.aba.dc5@gmail.com>"

3, 仕様バージョン番号

SpecVersion="001"

------------------------------------------------------------------------------------------
2. 物理キーボード定義フェーズ
------------------------------------------------------------------------------------------

一行に以下の3つの情報を','で区切って記述する。ここで定義されないQt::Key_*キーは無視される。
プラットフォーム指定が必要な場合は','で区切ってプラットフォーム名を追加する。

1, Qt::Key_名 : Qt namespace に示されている定数Key_*の文字列、Qt::は不要

2, VK_名      : windowsの仮想キーコード文字列

3, SHIFTKEY_INFO : "SHIFTKEY_NEED"    : SHIFTキーが押されている必要がある
                   "SHIFTKEY_NONEED"  : SHIFTキーが押されていない必要がある
                   "SHIFTKEY_THROUGHT": SHIFTキーの状態は関係しない

4, プラットフォーム指定 : 指定されたプラットフォーム上の時だけ指定が有効となる。
                          同じKeyに関する指定があった場合はより下の行の設定が優先となる。
                          Windows/macOS/Linux が指定可能

                          なし -> すべてのプラットフォームで有効
                          macOS -> macOSのみで有効

Key_Control,			VK_CONTROL,		SHIFTKEY_THROUGH
Key_Control,			VK_LWIN,		SHIFTKEY_THROUGH, macOS # override on macOS

コントロールキーに関する指定である上記の場合、macOS以外の場合はVK_CONTROLが送出されるが
macOSの時はVK_LWINが送出される。

ex.)

[Keys]
Key_Escape,		VK_ESCAPE,	SHIFTKEY_THROUGH
Key_Tab,		VK_TAB,		SHIFTKEY_THROUGH
Key_Backspace,	VK_BACK,	SHIFTKEY_THROUGH
Key_QuoteDbl,	VK_2,		SHIFTKEY_NEED # for JP keyboard

------------------------------------------------------------------------------------------
3. ソフトウェア・キーボード定義フェーズ
------------------------------------------------------------------------------------------

一行に以下の6つの情報を','で区切って記述する。


1, キーID								: SoftwareKeyboardクラスで定義されるキーID

2, キートップ文字列(通常)				: 通常時に表示する文字列

3, キートップ文字列(シフトキー押下時)	: シフトキー押下時に表示する文字列

4, 仮想キーコード名					    : 送出する仮想キーコード名

5, キートップ文字列(Fn押下時)			: Fn押下時に表示する文字列

6, Fn押下時に送る仮想キーコード名		: Fn押下時に送出する仮想キーコード名

すべてのソフトウェア・キーについて定義しなければならない。足りない場合はエラーとする。

ex.)

[SoftKeys]
1, "Esc",  "Esc",  VK_ESCAPE,      "Esc",  VK_ESCAPE
2, "1",    "!",    VK_1,           "F1",   VK_F1
3, "2",    "\"",   VK_2,           "F2",   VK_F2
